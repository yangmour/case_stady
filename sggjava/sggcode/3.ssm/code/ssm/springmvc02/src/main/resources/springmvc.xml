<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--  注解扫描包  -->
    <context:component-scan base-package="com.xiwen.mvc"/>
    <!--配置视图解析器 (SpringBoot不用配，所以复制即可)-->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver" id="viewResolver">
        <!--配置字符集属性-->
        <property name="characterEncoding" value="UTF-8"/>
        <!--配置模板引擎属性-->
        <property name="templateEngine">
            <!--配置内部bean-->
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <!--配置模块的解析器属性-->
                <property name="templateResolver">
                    <!--配置内部bean-->
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--配置前缀-->
                        <property name="prefix" value="/WEB-INF/views/"/>
                        <!--配置后缀-->
                        <property name="suffix" value=".html"/>
                        <!--配置字符集-->
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--  1.xml方式设置访问首页
            如果controller中没有业务代码就可以这么写
    -->
    <mvc:view-controller path="hello/toIndexPage" view-name="index"/>
    <!-- 2.设置这个为了跳转其他页面时候是正常的，不加就会有问题  -->
    <mvc:annotation-driven/>

    <!-- 静态资源的访问  ★
        也是需要mvc:annotation-driven标签
        效果：客户端发送请求到前端控制器，前端控制器会让HandlerMapping根据url寻找controller
             找得到，直接访问Controller就ok
             找不到,开始判断是否配置了静态资源访问
                没有配置，直接404
                有配置，在根据url去寻找静态资源
                    能找到，直接返回静态资源内容
                    找不到，还是404
        注意：如果Controller的映射路径和静态资源相同，会走Controller
    -->
    <mvc:default-servlet-handler/>
</beans>